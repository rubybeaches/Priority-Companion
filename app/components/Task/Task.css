:root {
    --icon-width: calc((24px + 1em));
    --task-width: calc((24px * 6 + 3em) * 2);
}

.taskTitle {
    color: #427BDE;
    margin-block: 0;
    margin-left: 6px;
}

.inputTitle {
    box-sizing: border-box;
    width: 60%;
    border-color: #DBE6FF;
    border-style: solid;
    background-color: #D8E6FF;
    color: #427BDE;
    outline: none;
    padding: 2px;
    border-radius: 2px;
    font-size: 1em;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.taskHeader {
    display: flex;
    justify-content: space-between;
    margin-bottom: 4px;
}

.taskWrapper {
    position: relative;
    border: 2px solid #5693FF;
    border-radius: 10px;
    background-color: #FFF;
    padding: 10px;
    margin-block: 12px 16px;
    width: 380px;
}

.tab {
    position: absolute;
    top: 0;
    left: 0px;
    width: 0px;
    height: 0px;
    border-radius: 10px;
    z-index: 3;
    background-color: #5693ff;
    box-shadow: -10px 0px 12px 0px #8c8c8c8c,-10px 0px 12px 0px #8c8c8c8c;
    background: linear-gradient(0.25turn, #5693ffc7, #B1CEFF, #f8f8f8, #B1CEFF, #5693ffc7);

    transition: left 1500ms ease-in-out, width 1500ms ease-in-out;
}

.revealWrapper {
    position: absolute;
    top: 0;
    left: 0px;
    height: 0;
    width: 0;
    overflow: hidden;
    background: none;
    backface-visibility: hidden;
    border-radius: 8px;

    transition: width 1500ms ease-in-out;
}

.overflow {
    overflow: hidden;
}

.taskBehindWrapper {
    position: absolute;
    top: 0;
    left: 0;
    border-radius: 8px;
    background-color: #B1CEFF;
    padding: 10px;
    width: var(--task-width);
    display: flex;
    flex-direction: row;
    align-items: center;
    height: 100%;
    z-index: 2;
}

.taskBehindWrapper h4 {
    margin-block: 5px;
    font-weight: 500;
    color: #427BDE;
    flex: 1;
}

.taskBehindWrapper button {
    background-color: #FFF;
    border: none;
    outline: none;
    border-radius: 12px;
    padding: 4px 10px;
    margin: 5px;
}

.taskBehindWrapper button:hover {
    background-color: #F8F8F8;
}

.activeSelector {
    position: absolute;
    width: 29px;
    height: 35px;
    background-color: white;
    border: 2px solid #5693FF;
    border-radius: 0 0 20px 20px;
    bottom: -35.5px;
    border-top: 0;
    transform: translate(25px, 0px);

    transition: transform 600ms ease-in-out;
}

.activeSelector .before {
    content: "";
    position: absolute;
    background-color: transparent;
    left: -11.5px;
    top: 2px;
    height: 15px;
    width: 10px;
    border-right: #5693FF 2px solid;
    border-top: #5693FF 2px solid;
    border-top-right-radius: 50px;
    box-shadow: 2px -6px 0 0 #FFF;
}

.activeSelector .after {
    content: "";
    position: absolute;
    background-color: transparent;
    right: -11.6px;
    top: 2px;
    height: 15px;
    width: 10px;
    border-left: #5693FF 2px solid;
    border-top: #5693FF 2px solid;
    border-top-left-radius: 50px;
    box-shadow: -2px -6px 0 0 #FFF;
}

.iconFieldWrapper {
    display: flex;
    /* margin-top: 4px; */
    height: 24px;
    line-height: 24px;
    padding: 5px;
    background-color: #F8F8F8;
    gap: .5em;
}

.minimizedField {
    animation: 1s ease-in-out 1 slideInFromLeft;
    flex: 1;
    height: fit-content;
    position: relative;
    top: -4px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    border: 2px solid transparent;
}

.minimizedFieldBack {
    background-color: #FFF;
    border: #5693FF 2px solid;
    border-radius: 20px;
    position: absolute;
    z-index: 0;
    width: 210px;
    height: 30px;
    top: 0px;
    left: 0px;
    transform: translate(5px, 0px);

    transition: transform 500ms ease-in-out, width 500ms ease-in-out;
}

@keyframes slideInFromLeft {
    0% {
      flex: .135;
    }
    100% {
      flex: 1;
    }
  }

.expandedWrapper {
    background-color: #F8F8F8;
    padding: 6px;
    margin-bottom: -4px;
}

.expandedWrapper .iconFieldWrapper {
    padding-left: 37px; 
}

.expandedField {
    animation: 1s ease-in-out 1 slideDownFromTop;
    background-color: #FFF;
    border: #5693FF 2px solid;
    border-radius: 8px;
    height: 80px;
    position: relative;
    padding: 6px;

    transition: height 550ms;
}

.expandedField {
    animation: 1s ease-in-out 1 slideDownFromTop;
    background-color: #FFF;
    border: #5693FF 2px solid;
    border-radius: 8px;
    height: 80px;
    position: relative;
    padding: 6px;
}


@keyframes slideDownFromTop {
    0% {
      height: 5px;
    }
    100% {
      height: 80px;
    }
  }

.minimizedField > *, .collapseField > * { 
    vertical-align: text-bottom;
    padding: 2px 2px 0px 2px;
    }
.minimizedField > input, .collapseField > input { 
    box-sizing: border-box;
    width: auto;
    border-color: transparent;
    background-color: transparent;
    border-style: solid;
    outline: none;
    padding-bottom: 1px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    }

.expandedField > textarea {
    resize: none;
    box-sizing: border-box;
    width: auto;
    border-color: #FFF;
    border-style: solid;
    outline: none;
    width: 100%;
    height: 100%;
    overflow: hidden;
    opacity: 1;

    transition: opacity 500ms ease;
}

/* Checkbox styles */
.checkboxWrapper {
    display: block;
    position: relative;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    z-index: 2;
  }

  .checkboxWrapper input {
    display: none;
  }
  
  /* Create a custom checkbox */
  .checkcircle {
    position: absolute;
    top: 0;
    left: -21px;
    height: 18px;
    width: 18px;
    background-color: #FFF;
    border: 2px solid #427BDE;
    border-radius: 20px;
  }
  
  /* On mouse-over, add a grey background color */
  .checkboxWrapper:hover input ~ .checkcircle {
    background-color: #F3F3F3;
  }
  
  /* When the checkbox is checked, add a white background */
  .checkboxWrapper input:checked ~ .checkcircle {
    background-color: #FFF;
  }
  
  /* Create the checkmark/indicator (hidden when not checked) */
  .checkcircle:after {
    content: "";
    position: absolute;
    display: none;
  }
  
  /* Show the checkmark when checked */
  .checkboxWrapper input:checked ~ .checkcircle:after {
    display: block;
  }
  
  /* Style the checkmark/indicator */
  .checkboxWrapper .checkcircle:after {
    height: 14px;
    width: 14px;
    background-color: #427BDE;
    border-radius: 20px;
    top: 2px;
    left: 2px;
  }

  .edit.animate .taskHeader input {
    animation: pulse 750ms linear infinite alternate;
  }

  .edit.animate textarea {
    animation: pulse 750ms linear infinite alternate;
  }

  @keyframes pulse {
    0% {
      opacity: .3;
    }
    100% {
      opacity: 1;
    }
  }